(function () {
	"use strict";
	function Attribute (name, value) {
		Object.defineProperties(this, {
			'localName': {value: name, writable: false, enumerable: true, configurable: false},
			'nodeType': {value: CONSTANTS.ATTRIBUTE_NODE, writable: false, enumerable: true, configurable: false},
			'name': {get: function () {return this.localName;}, enumerable: true, configurable: false},
			'namespaceURI': {value: null, writable: false, enumerable: true, configurable: false},
			'prefix': {value: null, writable: false, enumerable: true, configurable: false},
			'_value': {value: sortStr(value), writable: true, enumerable: false, configurable: false},
			'value': {get: function () {return this._value;}, set: function (v) {this._value = sortStr(v);}, enumerable: true, configurable: false},
			'nodeValue': {get: function () {return this._value;}, set: function (v) {this.value = v;}, enumerable: true, configurable: false},
			'toString': {value: function () {return [this.localName, this.value].join('=');}, writable: false, enumerable: false, configurable: false}
		});
	}

	function Attributes () {

	}

	Object.defineProperties(Attributes.prototype, {
		'get': {value: function (name) {return this[name];}, writable: false, enumerable: false, configurable: false},
		'set': {
			value: function (name, value) {
				var attr = new Attribute(name, value);
				if (!this[name]) {
					Array.prototype.push.call(this, v);
					this.sort();
				} else {
					for (var i = 0, l = this.length; i < l; ++i)
						if (this[i].localName === name)
							this[i] = attr;
				}
				this[name] = attr;
				return this;
			},
			writable: false,
			enumerable: false,
			configurable: false
		},
		'sort': {
			value: function () {
				Array.prototype.sort.call(this, function (a, b) {
					a = a.localName;
					b = b.localName;
					return a < b ? -1 : a > b ? 1 : 0;
				});
			},
			writable: false,
			enumerable: false,
			configurable: false
		},
		'toString': {
			value: function () {
				this.sort();
				Array.prototype.join.call(this, ' ');
			},
			writable: false,
			enumerable: false,
			configurable: false
		}
	});
	exports.Attributes = Attributes;
})()